$date
	Tue May 29 20:47:45 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tbbs $end
$var wire 1 ! valid $end
$var wire 1 " reset $end
$var wire 8 # data_in3 [7:0] $end
$var wire 8 $ data_in2 [7:0] $end
$var wire 8 % data_in1 [7:0] $end
$var wire 8 & data_in0 [7:0] $end
$var wire 8 ' data [7:0] $end
$var wire 1 ( clk $end
$scope module bancopruebasBS $end
$var wire 8 ) data [7:0] $end
$var reg 1 ( clk $end
$var reg 8 * data_in0 [7:0] $end
$var reg 8 + data_in1 [7:0] $end
$var reg 8 , data_in2 [7:0] $end
$var reg 8 - data_in3 [7:0] $end
$var reg 1 " reset $end
$var reg 1 ! valid $end
$upscope $end
$scope module bytestrip $end
$var wire 1 ( clk $end
$var wire 8 . data_in0 [7:0] $end
$var wire 8 / data_in1 [7:0] $end
$var wire 8 0 data_in2 [7:0] $end
$var wire 8 1 data_in3 [7:0] $end
$var wire 1 " reset $end
$var wire 1 ! valid $end
$var reg 8 2 data [7:0] $end
$var reg 8 3 data_next [7:0] $end
$var reg 8 4 next_state [7:0] $end
$var reg 8 5 state [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10 5
b10 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
0(
b0 '
b0 &
b0 %
b0 $
b0 #
1"
0!
$end
#5
0"
1(
#10
0(
